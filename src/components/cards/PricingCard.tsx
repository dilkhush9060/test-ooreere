import {Link} from "react-router";
import {H4} from "../ui/Typography";
import {cn} from "@/utils/cn";
// import {X} from "lucide-react";

interface PricingCardProps {
  title: string;
  price: string;
  description?: string;
  features: string[];
  highlightText?: string;
  bgColor?: string;
  buttonText?: string;
  onClick?: () => void;
  buttonClasssName?: string;
}

export const PricingCard = ({
  title,
  price,
  description,
  features,
  buttonText,
  buttonClasssName,
  onClick,
  bgColor = "#FFF4E7",
}: PricingCardProps) => {
  const formatIndianNumber = (price: string) => {
    const num = parseInt(price);

    if (num >= 10000000) {
      // 1 crore and above
      return `${(num / 10000000).toFixed(1).replace(".0", "")} Cr`;
    } else if (num >= 100000) {
      // 1 lakh and above
      return `${(num / 100000).toFixed(1).replace(".0", "")} L`;
    } else if (num >= 1000) {
      // 1 thousand and above
      return `${(num / 1000).toFixed(1).replace(".0", "")}k`;
    } else {
      return num.toString();
    }
  };

  return (
    <div className="w-full min-w-[300px] max-w-80 flex-shrink-0 rounded-[16px] bg-white shadow-[0_8px_30px_rgb(0,0,0,0.12)]">
      <div
        className={`relative min-h-[300px] overflow-hidden rounded-[16px]`}
        style={{backgroundColor: bgColor}}
      >
        <BgLines />
        <div className="relative z-10 bg-[#F2800E] p-5 text-center text-lg font-bold text-white">
          {/* {highlightText} */}
        </div>
        <div className="px-8 pt-10">
          {/* <div className="flex items-center justify-center pt-4">
          <RocketIcon />
        </div> */}
          <H4 className="text-center text-gray-950/80">{title}</H4>
          <h3 className="bg-bold relative mx-auto mt-4 flex w-max items-end gap-1 text-center text-5xl font-semibold tracking-tight text-gray-950">
            <span className="absolute right-full top-0 text-2xl font-semibold">
              &#x20b9;
            </span>
            {price.length > 3 && <div>{formatIndianNumber(price)}</div>}
            <span className="text-xl font-semibold">{"/month"}</span>
          </h3>
          <p className="my-4 text-center text-xs">{description}</p>
        </div>
      </div>
      <div className="p-8">
        <p className="w-full font-semibold">In this plan, youâ€™ll get:</p>
        <div className="flex w-full flex-col gap-4 py-4">
          {features.map((feature, index) => (
            <div key={index} className="flex w-full items-center gap-2">
              <div>
                {!feature.includes("No updates") ? (
                  <CheckIcon />
                ) : (
                  <CrossIcon />
                )}
              </div>
              <p className="text-sm text-[#50535B]">
                {!feature.includes("No updates") ? (
                  <span>{feature}</span>
                ) : (
                  feature.replace("No updates", "Update free")
                )}
              </p>
            </div>
          ))}
        </div>
        {buttonText && (
          <Link to={"/checkout"}>
            <button
              onClick={onClick}
              className={cn(
                "mt-4 w-full rounded-lg bg-[#FFA734] px-3 py-2 text-center font-bold text-white",
                buttonClasssName
              )}
            >
              {buttonText}
            </button>
          </Link>
        )}
      </div>
    </div>
  );
};

const BgLines = () => (
  <svg
    width="384"
    height="234"
    viewBox="0 0 384 234"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className="absolute inset-0"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M345.634 233.864L383.866 233.864L383.866 195.042L349.594 195.042L345.634 199.064L345.634 233.864ZM341.567 195.042L345.477 199.012L345.477 233.864L307.245 233.864L307.245 195.042L341.567 195.042ZM345.477 190.972L341.625 194.883L307.245 194.883L307.245 156.061L345.477 156.061L345.477 190.972ZM349.536 194.883L345.634 190.92L345.634 156.061L383.866 156.061L383.866 194.883L349.536 194.883ZM384 234L384 0L0.000142527 -3.35703e-05L0 234L384 234ZM307.088 233.864L268.856 233.864L268.856 195.042L307.088 195.042L307.088 233.864ZM230.467 233.864L268.699 233.864L268.699 195.042L230.467 195.042L230.467 233.864ZM230.31 233.864L192.078 233.864L192.078 195.042L230.31 195.042L230.31 233.864ZM153.69 233.864L191.922 233.864L191.922 195.042L153.69 195.042L153.69 233.864ZM153.533 233.864L115.301 233.864L115.301 195.042L153.533 195.042L153.533 233.864ZM76.912 233.864L115.144 233.864L115.144 195.042L76.912 195.042L76.912 233.864ZM76.7554 233.864L38.5233 233.864L38.5233 195.042L76.7554 195.042L76.7554 233.864ZM0.134308 233.864L38.3664 233.864L38.3664 195.042L0.134311 195.042L0.134308 233.864ZM307.088 194.883L268.856 194.883L268.856 156.061L307.088 156.061L307.088 194.883ZM230.467 194.883L268.699 194.883L268.699 156.061L234.313 156.061L230.467 159.966L230.467 194.883ZM226.526 156.061L230.31 159.903L230.31 194.883L192.078 194.883L192.078 156.061L226.526 156.061ZM230.31 151.873L226.357 155.888L226.37 155.902L192.078 155.902L192.078 117.08L230.31 117.08L230.31 151.873ZM234.469 155.902L234.483 155.888L230.467 151.811L230.467 117.08L268.699 117.08L268.699 155.902L234.469 155.902ZM153.69 194.883L191.922 194.883L191.922 156.061L153.69 156.061L153.69 194.883ZM153.533 194.883L115.301 194.883L115.301 156.061L153.533 156.061L153.533 194.883ZM76.912 194.883L115.144 194.883L115.144 156.061L76.912 156.061L76.912 194.883ZM76.7554 194.883L38.5233 194.883L38.5233 166.831L49.1301 156.061L76.7554 156.061L76.7554 194.883ZM49.2867 155.902L76.7553 155.902L76.7553 120.904L76.6269 121.035L72.732 117.08L38.5231 117.08L38.5231 144.945L49.2998 155.888L49.2867 155.902ZM38.5231 145.156L49.0923 155.888L49.0792 155.902L42.5342 155.902L42.5473 155.888L38.5231 151.802L38.5231 145.156ZM38.3666 145.026L38.3666 117.08L0.13444 117.08L0.134437 155.902L27.6821 155.902L27.669 155.888L38.3666 145.026ZM27.8896 155.902L27.8765 155.888L38.3666 145.236L38.3666 151.882L34.4215 155.888L34.4345 155.902L27.8896 155.902ZM27.8387 156.061L0.134315 156.061L0.134311 194.883L38.3664 194.883L38.3664 166.751L27.8387 156.061ZM38.3664 166.54L28.0462 156.061L34.5912 156.061L38.3664 159.894L38.3664 166.54ZM38.5233 166.62L48.9226 156.061L42.3776 156.061L38.5233 159.974L38.5233 166.62ZM76.7554 112.914L76.6269 112.783L72.564 116.909L72.5753 116.92L38.5233 116.92L38.5233 78.0985L76.7554 78.0985L76.7554 112.914ZM80.6785 116.92L80.6898 116.909L76.912 113.073L76.912 78.0985L115.144 78.0985L115.144 116.92L80.6785 116.92ZM76.912 120.745L80.5218 117.08L115.144 117.08L115.144 155.902L76.912 155.902L76.912 120.745ZM383.866 155.902L345.634 155.902L345.634 117.08L383.866 117.08L383.866 155.902ZM307.245 155.902L345.477 155.902L345.477 117.08L307.245 117.08L307.245 155.902ZM307.088 155.902L268.856 155.902L268.856 117.08L307.088 117.08L307.088 155.902ZM153.69 155.902L191.922 155.902L191.922 117.08L153.69 117.08L153.69 155.902ZM153.533 155.902L115.301 155.902L115.301 117.08L153.533 117.08L153.533 155.902ZM383.866 116.92L345.634 116.92L345.634 78.0985L383.866 78.0985L383.866 116.92ZM307.245 116.92L345.477 116.92L345.477 78.0985L317.809 78.0985L317.858 78.149L307.245 88.9262L307.245 116.92ZM307.245 88.7156L317.651 78.149L317.601 78.0985L311.056 78.0985L311.106 78.149L307.245 82.0696L307.245 88.7156ZM307.088 82.2286L307.088 88.8746L307.043 88.9206L296.435 78.149L296.485 78.0985L303.03 78.0985L302.98 78.149L307.043 82.2746L307.088 82.2286ZM307.088 74.0695L307.043 74.0234L303.186 77.9394L296.641 77.9394L307.043 67.3774L307.088 67.4235L307.088 74.0695ZM310.899 77.9394L307.245 74.2285L307.245 67.5825L317.444 77.9394L310.899 77.9394ZM317.652 77.9394L345.477 77.9394L345.477 39.1175L307.245 39.1175L307.245 67.3718L317.652 77.9394ZM307.088 67.2128L307.088 39.1175L268.856 39.1175L268.856 77.9394L296.434 77.9394L307.043 67.1668L307.088 67.2128ZM296.277 78.0985L268.856 78.0985L268.856 116.92L307.088 116.92L307.088 89.0853L307.043 89.1313L296.227 78.149L296.277 78.0985ZM230.467 116.92L268.699 116.92L268.699 78.0985L230.467 78.0985L230.467 116.92ZM230.31 116.92L192.078 116.92L192.078 78.0985L230.31 78.0985L230.31 116.92ZM153.69 116.92L191.922 116.92L191.922 78.0985L153.69 78.0985L153.69 116.92ZM153.533 116.92L115.301 116.92L115.301 78.0985L153.533 78.0985L153.533 116.92ZM0.134318 116.92L38.3664 116.92L38.3664 78.0985L0.134321 78.0985L0.134318 116.92ZM383.866 77.9394L345.634 77.9394L345.634 39.1175L383.866 39.1175L383.866 77.9394ZM230.467 77.9394L268.699 77.9394L268.699 39.1175L230.467 39.1174L230.467 77.9394ZM230.31 77.9394L192.078 77.9394L192.078 39.1174L230.31 39.1174L230.31 77.9394ZM153.69 77.9394L191.922 77.9394L191.922 39.1174L153.69 39.1174L153.69 77.9394ZM153.533 77.9394L115.301 77.9394L115.301 39.1174L153.533 39.1174L153.533 77.9394ZM76.912 77.9394L115.144 77.9394L115.144 39.1174L76.912 39.1174L76.912 77.9394ZM76.7554 77.9394L38.5233 77.9394L38.5233 39.1174L76.7554 39.1174L76.7554 77.9394ZM0.134322 77.9394L38.3664 77.9394L38.3664 39.1174L0.134325 39.1174L0.134322 77.9394ZM383.866 38.9583L345.634 38.9583L345.634 0.13638L383.866 0.136383L383.866 38.9583ZM307.245 38.9583L345.477 38.9583L345.477 0.13638L307.245 0.136376L307.245 38.9583ZM307.088 38.9583L268.856 38.9583L268.856 0.136373L307.088 0.136376L307.088 38.9583ZM230.467 38.9583L268.699 38.9583L268.699 0.136373L230.467 0.13637L230.467 38.9583ZM230.31 38.9583L192.078 38.9583L192.078 0.136366L230.31 0.13637L230.31 38.9583ZM153.69 38.9583L191.922 38.9583L191.922 0.136366L153.69 0.136363L153.69 38.9583ZM153.533 38.9583L115.301 38.9583L115.301 0.13636L153.533 0.136363L153.533 38.9583ZM76.912 38.9583L115.144 38.9583L115.144 0.13636L76.912 0.136356L76.912 38.9583ZM76.7554 38.9583L38.5233 38.9583L38.5233 0.136353L76.7554 0.136356L76.7554 38.9583ZM0.134447 38.9583L38.3666 38.9583L38.3666 0.136353L0.13445 0.136349L0.134447 38.9583Z"
      fill="url(#paint0_linear_683_99)"
      fillOpacity="0.6"
    />
    <defs>
      <linearGradient
        id="paint0_linear_683_99"
        x1="192"
        y1="191.5"
        x2="192"
        y2="29.483"
        gradientUnits="userSpaceOnUse"
      >
        <stop stopOpacity="0" />
        <stop offset="1" />
      </linearGradient>
    </defs>
  </svg>
);

const CheckIcon = () => (
  <svg
    width="32"
    height="32"
    viewBox="0 0 32 32"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M28.5 16C28.5 22.9035 22.9035 28.5 16 28.5C9.09644 28.5 3.5 22.9035 3.5 16C3.5 9.09644 9.09644 3.5 16 3.5C22.9035 3.5 28.5 9.09644 28.5 16ZM21.0379 12.2121C21.404 12.5782 21.404 13.1718 21.0379 13.5379L14.7879 19.7879C14.4218 20.154 13.8283 20.154 13.4621 19.7879L10.9621 17.2879C10.596 16.9217 10.596 16.3282 10.9621 15.9621C11.3282 15.596 11.9218 15.596 12.2879 15.9621L14.125 17.7991L16.9185 15.0056L19.7121 12.2121C20.0783 11.846 20.6717 11.846 21.0379 12.2121Z"
      fill="#35BE3A"
    />
  </svg>
);
const CrossIcon = () => (
  <svg
    width="32"
    height="32"
    viewBox="0 0 32 32"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M28.5 16C28.5 22.9035 22.9035 28.5 16 28.5C9.09644 28.5 3.5 22.9035 3.5 16C3.5 9.09644 9.09644 3.5 16 3.5C22.9035 3.5 28.5 9.09644 28.5 16ZM12.2929 11.2929C12.6834 10.9024 13.3166 10.9024 13.7071 11.2929L16 13.5858L18.2929 11.2929C18.6834 10.9024 19.3166 10.9024 19.7071 11.2929C20.0976 11.6834 20.0976 12.3166 19.7071 12.7071L17.4142 15L19.7071 17.2929C20.0976 17.6834 20.0976 18.3166 19.7071 18.7071C19.3166 19.0976 18.6834 19.0976 18.2929 18.7071L16 16.4142L13.7071 18.7071C13.3166 19.0976 12.6834 19.0976 12.2929 18.7071C11.9024 18.3166 11.9024 17.6834 12.2929 17.2929L14.5858 15L12.2929 12.7071C11.9024 12.3166 11.9024 11.6834 12.2929 11.2929Z"
      fill="#FF5A5F"
    />
  </svg>
);

// const RocketIcon = () => (
//   <svg
//     width="80"
//     height="80"
//     viewBox="0 0 80 80"
//     fill="none"
//     xmlns="http://www.w3.org/2000/svg"
//   >
//     <circle cx="40" cy="40" r="24" fill="white" />
//     <path
//       d="M33.3853 32.3088L48.5841 47.5077"
//       stroke="#F92D59"
//       stroke-width="3"
//       stroke-linecap="round"
//       stroke-linejoin="round"
//     />
//     <path
//       d="M35.1516 29.3923C27.2647 24.0111 19.9117 28.1189 13.75 34.4449L27.3879 42.6605"
//       stroke="#F92D59"
//       stroke-width="3"
//       stroke-linecap="round"
//       stroke-linejoin="round"
//     />
//     <path
//       d="M51.5006 45.7415C56.8819 53.6283 52.774 60.9812 46.448 67.1429L38.2324 53.505"
//       stroke="#F92D59"
//       stroke-width="3"
//       stroke-linecap="round"
//       stroke-linejoin="round"
//     />
//     <path
//       d="M27.3879 42.6192L38.2736 53.505C46.9821 48.288 56.8819 43.2354 61.4005 38.5525C71.1771 28.7759 65.5083 15.3845 65.5083 15.3845C65.5083 15.3845 52.1169 9.71572 42.3403 19.4923C37.6574 24.0109 32.5638 33.9517 27.3879 42.6192Z"
//       stroke="#851B32"
//       stroke-width="3"
//       stroke-linecap="round"
//       stroke-linejoin="round"
//     />
//     <path
//       d="M54.8281 28.1188C55.9622 28.1188 56.882 27.1992 56.882 26.0649C56.882 24.9306 55.9622 24.011 54.8281 24.011C53.6939 24.011 52.7742 24.9306 52.7742 26.0649C52.7742 27.1992 53.6939 28.1188 54.8281 28.1188Z"
//       stroke="#F92D59"
//       stroke-width="3"
//       stroke-linecap="round"
//       stroke-linejoin="round"
//     />
//     <path
//       d="M26.8128 62.7881C24.4303 65.0885 13.75 67.1424 13.75 67.1424C13.75 67.1424 15.8039 56.4621 18.1043 54.0796C18.6684 53.4745 19.3486 52.989 20.1044 52.6521C20.8603 52.3153 21.6762 52.1342 22.5035 52.1196C23.3309 52.105 24.1527 52.2572 24.9199 52.5671C25.6871 52.8768 26.3841 53.3381 26.9692 53.9235C27.5543 54.5085 28.0156 55.2056 28.3255 55.9729C28.6354 56.7398 28.7876 57.5618 28.773 58.3891C28.7584 59.2164 28.5773 60.0322 28.2405 60.7881C27.9038 61.5439 27.4182 62.2241 26.8128 62.7881Z"
//       stroke="#F92D59"
//       stroke-width="3"
//       stroke-linecap="round"
//       stroke-linejoin="round"
//     />
//     <path
//       d="M4.16466 16.7513C3.61178 16.6535 3.61178 15.8465 4.16466 15.7487C6.24673 15.3803 7.78447 13.7329 8.22887 11.6686C8.34848 11.113 9.12653 11.1095 9.25091 11.6641C9.71423 13.7297 11.2405 15.3759 13.3332 15.7461C13.8889 15.8444 13.8889 16.6556 13.3332 16.7539C11.2405 17.1241 9.71423 18.7703 9.25091 20.8359C9.12653 21.3905 8.34848 21.387 8.22887 20.8314C7.78447 18.7671 6.24673 17.1197 4.16466 16.7513Z"
//       stroke="#F92D59"
//       stroke-linecap="round"
//       stroke-linejoin="round"
//     />
//     <path
//       d="M61.4573 61.5007C61.1809 61.4518 61.1809 61.0482 61.4573 60.9993C62.4984 60.8152 63.2672 59.9915 63.4894 58.9593C63.5492 58.6815 63.9383 58.6798 64.0005 58.957C64.2321 59.9898 64.9953 60.813 66.0416 60.9981C66.3195 61.0472 66.3195 61.4528 66.0416 61.5019C64.9953 61.6871 64.2321 62.5102 64.0005 63.543C63.9383 63.8202 63.5492 63.8185 63.4894 63.5407C63.2672 62.5085 62.4984 61.6848 61.4573 61.5007Z"
//       stroke="#F92D59"
//       stroke-linecap="round"
//       stroke-linejoin="round"
//     />
//     <path
//       d="M28.9573 14.0007C28.6809 13.9518 28.6809 13.5482 28.9573 13.4993C29.9984 13.3152 30.7672 12.4915 30.9894 11.4593C31.0492 11.1815 31.4383 11.1798 31.5005 11.457C31.7321 12.4898 32.4953 13.313 33.5416 13.4981C33.8195 13.5472 33.8195 13.9528 33.5416 14.0019C32.4953 14.1871 31.7321 15.0102 31.5005 16.043C31.4383 16.3202 31.0492 16.3185 30.9894 16.0407C30.7672 15.0085 29.9984 14.1848 28.9573 14.0007Z"
//       stroke="#F92D59"
//       stroke-linecap="round"
//       stroke-linejoin="round"
//     />
//   </svg>
// );
